// <auto-generated />
using System;
using ERP.PayrollService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ERP.PayrollService.Migrations
{
    [DbContext(typeof(PayrollDbContext))]
    [Migration("20250613115707_InitialCreate1")]
    partial class InitialCreate1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ERP.PayrollService.Models.Allowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PayrollStructureId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PayrollStructureId");

                    b.ToTable("Allowances");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.CurrencyRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FromCurrency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("ToCurrency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CurrencyRates");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.Deduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PayrollStructureId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PayrollStructureId");

                    b.ToTable("Deductions");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("BaseSalary")
                        .HasColumnType("numeric");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.EmployeeContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContractType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Wage")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeContracts");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.Leave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int?>("EmployeeId1")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeId1");

                    b.ToTable("Leaves");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int?>("EmployeeId1")
                        .HasColumnType("integer");

                    b.Property<decimal>("Installment")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Remaining")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeId1");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.LocalizationInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LocalizationInfos");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.PayrollBatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PayrollCalendarId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PayrollCalendarId");

                    b.ToTable("PayrollBatches");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.PayrollCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("PayrollCalendars");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.PayrollRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Formula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PayrollStructureId")
                        .HasColumnType("integer");

                    b.Property<string>("RuleType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Sequence")
                        .HasColumnType("integer");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("PayrollStructureId");

                    b.ToTable("PayrollRules");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.PayrollStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PayrollStructures");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.PayrollTaxConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Threshold")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("PayrollTaxConfigs");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.Payslip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<decimal>("GrossPay")
                        .HasColumnType("numeric");

                    b.Property<decimal>("NetPay")
                        .HasColumnType("numeric");

                    b.Property<int?>("PayrollBatchId")
                        .HasColumnType("integer");

                    b.Property<int>("PayrollStructureId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PeriodEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("PeriodStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PayrollBatchId");

                    b.HasIndex("PayrollStructureId");

                    b.ToTable("Payslips");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.PayslipAdjustment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PayslipId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PayslipId");

                    b.ToTable("PayslipAdjustments");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.PayslipLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PayslipId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PayslipId");

                    b.ToTable("PayslipLines");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.PayslipStatusChangeLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ChangedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NewStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OldStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PayslipId")
                        .HasColumnType("integer");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PayslipStatusChangeLogs");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.RetroactiveChangeLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AffectedPeriodEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("AffectedPeriodStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ChangeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("RetroactiveChangeLogs");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.WorkedDayInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("NumberOfDays")
                        .HasColumnType("numeric");

                    b.Property<decimal>("NumberOfHours")
                        .HasColumnType("numeric");

                    b.Property<int>("PayslipId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PayslipId");

                    b.ToTable("WorkedDayInputs");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.Allowance", b =>
                {
                    b.HasOne("ERP.PayrollService.Models.PayrollStructure", "PayrollStructure")
                        .WithMany("Allowances")
                        .HasForeignKey("PayrollStructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PayrollStructure");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.Deduction", b =>
                {
                    b.HasOne("ERP.PayrollService.Models.PayrollStructure", "PayrollStructure")
                        .WithMany("Deductions")
                        .HasForeignKey("PayrollStructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PayrollStructure");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.EmployeeContract", b =>
                {
                    b.HasOne("ERP.PayrollService.Models.Employee", "Employee")
                        .WithMany("EmployeeContracts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.Leave", b =>
                {
                    b.HasOne("ERP.PayrollService.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.PayrollService.Models.Employee", null)
                        .WithMany("Leaves")
                        .HasForeignKey("EmployeeId1");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.Loan", b =>
                {
                    b.HasOne("ERP.PayrollService.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.PayrollService.Models.Employee", null)
                        .WithMany("Loans")
                        .HasForeignKey("EmployeeId1");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.PayrollBatch", b =>
                {
                    b.HasOne("ERP.PayrollService.Models.PayrollCalendar", "PayrollCalendar")
                        .WithMany("PayrollBatches")
                        .HasForeignKey("PayrollCalendarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PayrollCalendar");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.PayrollRule", b =>
                {
                    b.HasOne("ERP.PayrollService.Models.PayrollStructure", "PayrollStructure")
                        .WithMany("Rules")
                        .HasForeignKey("PayrollStructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PayrollStructure");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.Payslip", b =>
                {
                    b.HasOne("ERP.PayrollService.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.PayrollService.Models.PayrollBatch", "PayrollBatch")
                        .WithMany("Payslips")
                        .HasForeignKey("PayrollBatchId");

                    b.HasOne("ERP.PayrollService.Models.PayrollStructure", "PayrollStructure")
                        .WithMany()
                        .HasForeignKey("PayrollStructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("PayrollBatch");

                    b.Navigation("PayrollStructure");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.PayslipAdjustment", b =>
                {
                    b.HasOne("ERP.PayrollService.Models.Payslip", "Payslip")
                        .WithMany("PayslipAdjustments")
                        .HasForeignKey("PayslipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payslip");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.PayslipLine", b =>
                {
                    b.HasOne("ERP.PayrollService.Models.Payslip", "Payslip")
                        .WithMany("PayslipLines")
                        .HasForeignKey("PayslipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payslip");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.WorkedDayInput", b =>
                {
                    b.HasOne("ERP.PayrollService.Models.Payslip", "Payslip")
                        .WithMany("WorkedDayInputs")
                        .HasForeignKey("PayslipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payslip");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.Employee", b =>
                {
                    b.Navigation("EmployeeContracts");

                    b.Navigation("Leaves");

                    b.Navigation("Loans");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.PayrollBatch", b =>
                {
                    b.Navigation("Payslips");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.PayrollCalendar", b =>
                {
                    b.Navigation("PayrollBatches");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.PayrollStructure", b =>
                {
                    b.Navigation("Allowances");

                    b.Navigation("Deductions");

                    b.Navigation("Rules");
                });

            modelBuilder.Entity("ERP.PayrollService.Models.Payslip", b =>
                {
                    b.Navigation("PayslipAdjustments");

                    b.Navigation("PayslipLines");

                    b.Navigation("WorkedDayInputs");
                });
#pragma warning restore 612, 618
        }
    }
}
